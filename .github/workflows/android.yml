name: Android
on: [pull_request, push, workflow_dispatch]
jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - name: Create output folders
        run: mkdir artifacts

      - name: Checkout the code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: actions/setup-dotnet@v1

      - name: Install GitVersion
        run: git fetch --unshallow && dotnet tool install --global GitVersion.Tool

      - name: Get semver
        id: semver
        run: echo "$(dotnet gitversion | jq -r '.FullSemVer')" >> ./semver.txt

      - run: chmod +x ./android/gradlew

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the app
        run: yarn run build-prod

      - name: Package web
        run: tar -czf ./artifacts/web.tar.gz www/.

      - name: Prepare android build
        run: yarn run prepare-android

      - uses: sparkfabrik/android-build-action@v1.0.0
        with:
          project-path: android
          output-path: ./artifacts/apero.apk

      - name: Tar workspace
        run: tar -czf /tmp/workspace.tar.gz .

      - uses: actions/upload-artifact@v2
        name: Upload workspace
        with:
          name: workspace
          path: /tmp/workspace.tar.gz

  deploy_apk:
    runs-on: ubuntu-latest
    needs: build_test
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: gh cli auth
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Download workspace
        uses: actions/download-artifact@v2
        with:
          name: workspace
          path: /tmp/workspace

      - name: Untar workspace
        run: tar -xzf /tmp/workspace/workspace.tar.gz -C .

      - name: Retreive semver
        run: echo "SEMVER=$(cat './semver.txt')" >> $GITHUB_ENV

      - name: upload apk to Firebase App Distribution
        run: yarn firebase appdistribution:distribute --app ${{ secrets.FIREBASE_APP_ID }} ./artifacts/apero.apk --token ${{ secrets.FIREBASE_TOKEN }} --groups testers --release-notes ${{ env.SEMVER }}

      - name: Create release
        run: gh release create ${{ env.SEMVER }} './artifacts/apero.apk' './artifacts/web.tar.gz'  -t ${{ env.SEMVER }}



